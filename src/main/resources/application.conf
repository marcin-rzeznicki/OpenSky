akka {
  loglevel = "DEBUG"
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  kafka {
    producer {
      kafka-clients {
        bootstrap.servers = "localhost:9092"
        key.serializer    = "org.apache.kafka.common.serialization.ByteArraySerializer"
        max.block.ms      = 20000
      }
    }
    consumer {
      poll-timeout = 200ms
      kafka-clients {
        bootstrap.servers = "localhost:9092"
        key.deserializer  = "org.apache.kafka.common.serialization.ByteArrayDeserializer"
        auto.offset.reset = "earliest"
      }
    }
  }
}

opensky {
  collector {
    throttle-control {
      elements      = 1
      per           = 10 seconds
      maximum-burst = 1
    }
    sink = "opensky-data"
    endpoint = "https://opensky-network.org/api/states/all"
  }
  aggregator {
    window-time = 1 minute
    source      = ${opensky.collector.sink}
  }
  cassandra {
    seeds              = ["localhost"]
    port               = 9042
    no-heartbeat       = true
    key-space          = "opensky"
    kafka-source       = ${opensky.collector.sink}
    autocreate-timeout = 10 seconds

    subscriber {
      batch-size          = 100
      concurrent-requests = 8
      flush-interval      = 10 seconds
    }
  }
}